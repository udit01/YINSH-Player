Game . cpp 
OLDER POSS MOVES function logic


	/*
	//else
	int i,j;
	// int whiteRings=0,blackRings=0,whiteringPos[5][2],blackringPos[5][2];		//considering white as player1 black as player2
	int whiteMarks=0,blackMarks=0,whiteMarkPos[121][2],blackMarkPos[121][2];	//no issues of this outside this class
	for(i=0;i<11;i++)
	{
		for(j=0;j<11;j++)
		{
			if(this->board->nodes[i][j].valid==0)
				continue;
			//else
				
			switch(this->board->nodes[i][j].player)
			{
				case 1 :
					whiteMarkPos[whiteMarks][0]=i;
					whiteMarkPos[whiteMarks][1]=j;
					whiteMarks++;
					break;
				case 2 :
					blackMarkPos[blackMarks][0]=i;
					blackMarkPos[blackMarks][1]=j;
					blackMarks++;
					break;
				default :
					cerr<<"markers not properly assigned to this->board->nodes"<<endl;
					exit(1);
			}
				
			}
			
	}
	
	//is it possible that we need to remove markers before move
	pair < pair<int,int> , pair<int,int> > remove;
	
	switch(player){
		case 1 :
			remove=removableMarkers(1,whiteMarks,whiteMarkPos);
			break;
		case 2 :
			remove=removableMarkers(2,blackMarks,blackMarkPos);
			break;
		default :
			cerr<<"wrong player passed to poss_moves()"<<endl;
			exit(1);
	}
	if(remove.first.first != -1)
	{
		poss_move.push_back(Move(3,remove.first.first,remove.first.second));
		poss_move.push_back(Move(4,remove.second.first,remove.second.second));
		switch (player)
		{
			case 1 :
				poss_move.push_back(Move(5,whiteringPos[whiteRings-1][0],whiteringPos[whiteRings-1][1]));//need to make it for all rings, right now removing only last one
				whiteRings--;
				break;
			case 2 :
			poss_move.push_back(Move(5,blackringPos[blackRings-1][0],blackringPos[blackRings-1][1]));//need to make it for all rings, right now removing only last one
				blackRings--;
				break;
		}
		//ring movements need to be added to each move
		totalMoves=1;	//need to be considered while all rings possible to remove
		possibleMoves.push_back(poss_move);
		return totalMoves;
	}
	//else
	//other moves - movement of rings
	if(player==1)
	{
		for(i=0;i<whiteRings;i++)
		{
			int ringposi=whiteringPos[whiteRings][0];
			int ringposj=whiteringPos[whiteRings][1];
			int x;
		}
	}
	 
	 */
	